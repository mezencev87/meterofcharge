#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период = Новый СтандартныйПериод(НачалоГода(ТекущаяДатаСеанса()), ТекущаяДатаСеанса());
#Если МобильноеПриложениеСервер Тогда
//	ВертикальнаяПрокрутка = ВертикальнаяПрокруткаФормы.Использовать;
#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ОбработатьСписокАдресов() Тогда
		ОткрытьФорму("Справочник.Адреса.Форма.ФормаЭлемента");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновлениеДанных" Тогда
		ОбработатьСписокАдресов();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ТаблицаСостояния.Параметры.УстановитьЗначениеПараметра("НачалоПериода", Период.ДатаНачала);
	ТаблицаСостояния.Параметры.УстановитьЗначениеПараметра("КонецПериода", Период.ДатаОкончания);
	ОбработатьСписокАдресов();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура РасчетНаНовыйМесяц(Команда)
	ИмяТаблицы = "ТаблицаСостояния" + СтрЗаменить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя, "СтраницаАдрес", "");
	стПараметры = СтруктураАдресаДляТекущегоНабораУслуг(Элементы[ИмяТаблицы].ТекущиеДанные);
	ОткрытьФорму("Документ.Расчет.Форма.ФормаДокумента", стПараметры, );
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция СтруктураАдресаДляТекущегоНабораУслуг(Знач ТекущиеДанные)
	ТекущийНабор = Неопределено;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.Свойство("НаборУслуг", ТекущийНабор) Тогда
		Возврат Новый Структура("Адрес", ТекущийНабор.Владелец);
	Иначе
		Возврат Новый Структура("Адрес", Справочники.Адреса.НайтиПоНаименованию(Элементы.ТаблицаСостояния.Заголовок));
	КонецЕсли;
КонецФункции

&НаСервере
Функция ОбработатьСписокАдресов()
	Перем Узел;
	Перем ВыборкаАдресов;
	Перем Индекс;
	Узел = ПланыОбмена.Мобильные.ЭтотУзел().ПолучитьОбъект();
	Абонент = Узел.Владелец;
	ВыборкаАдресов = Справочники.Адреса.Выбрать( , Абонент, , );
	Индекс = 0;
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Пролистывание;
	Пока ВыборкаАдресов.Следующий() Цикл
		Если Индекс = 0 Тогда
			ТаблицаСостояния.Параметры.УстановитьЗначениеПараметра("НачалоПериода", Период.ДатаНачала);
			ТаблицаСостояния.Параметры.УстановитьЗначениеПараметра("КонецПериода", Период.ДатаОкончания);
			ТаблицаСостояния.Параметры.УстановитьЗначениеПараметра("Адрес", ВыборкаАдресов.Ссылка);
			Элементы.ТаблицаСостояния.Заголовок = Строка(ВыборкаАдресов.Ссылка);
		Иначе
			ИмяРеквизита = "ТаблицаСостояния" + Индекс;
			элСписок = Элементы.Найти(ИмяРеквизита);
			Если элСписок = Неопределено Тогда
				реквСписок = ДобавитьТаблицуПоАдресу(ИмяРеквизита, Индекс, ВыборкаАдресов.Ссылка);
			Иначе
				элСписок.Заголовок = Строка(ВыборкаАдресов.Ссылка);
				реквСписок = ЭтотОбъект[ИмяРеквизита];
			КонецЕсли;
			реквСписок.Параметры.УстановитьЗначениеПараметра("НачалоПериода", Период.ДатаНачала);
			реквСписок.Параметры.УстановитьЗначениеПараметра("КонецПериода", Период.ДатаОкончания);
			реквСписок.Параметры.УстановитьЗначениеПараметра("Адрес", ВыборкаАдресов.Ссылка);
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(РасчетыЗаУслугиОстатки.БалансОстаток) КАК ОстатокБаланса
	|ИЗ
	|	РегистрНакопления.РасчетыЗаУслуги.Остатки(&НаДату, НаборУслуг.Владелец.Владелец = &Абонент) КАК РасчетыЗаУслугиОстатки";

	Запрос.УстановитьПараметр("Абонент", Абонент);
	Запрос.УстановитьПараметр("НаДату", Период.ДатаОкончания);
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ОбщийБаланс = Формат(ВыборкаДетальныеЗаписи.ОстатокБаланса, "ЧН=0,00;ЧДЦ=2") + "₽";
		Если ВыборкаДетальныеЗаписи.ОстатокБаланса >= 0 Тогда
			Элементы.ОбщийБаланс.ЦветТекста = WebЦвета.БледноЗеленый;
		Иначе
			Элементы.ОбщийБаланс.ЦветТекста = WebЦвета.ОранжевоКрасный;
		КонецЕсли;
	КонецЕсли;
	Возврат Индекс > 0;
КонецФункции

&НаСервере
Функция ДобавитьТаблицуПоАдресу(ИмяРеквизита, Индекс, Адрес)
	Перем спПраваяГруппаКолонок;
	Перем спЛеваяГруппаКолонок;
	Перем спКолонка;
	Перем КнопкаРасчета;
	Перем реквСписок;
	Перем элСтраница;
	Перем спОсновнаяГруппаКолонок;
	Перем элСписок;
	Перем спКолонкиПоказания;
	Перем мДобавляемыеРеквизиты;
	мДобавляемыеРеквизиты = Новый Массив;
	мДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДинамическийСписок"), ));
	ИзменитьРеквизиты(мДобавляемыеРеквизиты);
	реквСписок = ЭтотОбъект[ИмяРеквизита];
	реквСписок.ПроизвольныйЗапрос = Истина;
	реквСписок.ТекстЗапроса = ТаблицаСостояния.ТекстЗапроса;
	элСтраница = Элементы.Добавить("СтраницаАдрес" + Индекс, Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
	элСтраница.Вид = ВидГруппыФормы.Страница;
	элСтраница.ОтображатьЗаголовок = Ложь;
	элСписок = Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), элСтраница);
	элСписок.ПутьКДанным = ИмяРеквизита;
	элСписок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
	элСписок.ИспользованиеТекущейСтроки = ИспользованиеТекущейСтрокиТаблицы.ОтображениеВыделения;
	элСписок.Заголовок = Строка(Адрес);
	элСписок.Отображение = ОтображениеТаблицы.Список;
	элСписок.ПериодАвтоОбновления = 10;
	КнопкаРасчета = Элементы.Добавить("КнопкаРасчета" + Индекс, Тип("КнопкаФормы"), элСписок.КоманднаяПанель);
	КнопкаРасчета.ИмяКоманды = "РасчетНаНовыйМесяц";
	//Основная группа
	спОсновнаяГруппаКолонок = Элементы.Добавить("спОсновнаяГруппаКолонок" + Индекс, Тип("ГруппаФормы"), элСписок);
	спОсновнаяГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	спОсновнаяГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
		//Левая группа
	спЛеваяГруппаКолонок = Элементы.Добавить("спЛеваяГруппаКолонок" + Индекс, Тип("ГруппаФормы"),
		спОсновнаяГруппаКолонок);
	спЛеваяГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	спЛеваяГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
	спКолонка = Элементы.Добавить("спКолонкаНаборУслуг" + Индекс, Тип("ПолеФормы"), спЛеваяГруппаКолонок);
	спКолонка.ПутьКДанным = ИмяРеквизита + ".НаборУслуг";
	спКолонка.Заголовок = "Ресурс";
	спКолонка.ШрифтЗаголовка = ШрифтыСтиля["ВыделениеТекста"];
		//группа колонок Показания
	спКолонкиПоказания = Элементы.Добавить("спКолонкиПоказания" + Индекс, Тип("ГруппаФормы"), спЛеваяГруппаКолонок);
	спКолонкиПоказания.Вид = ВидГруппыФормы.ГруппаКолонок;
	спКолонкиПоказания.Заголовок = "Показания:";
	спКолонкиПоказания.ШрифтЗаголовка = ШрифтыСтиля["ВыделениеТекста"];
	спКолонкиПоказания.ОтображатьВШапке = Истина;
	ДобавитьКолонку("ПоказанияНачальныйОстаток", Индекс, "На начало", спКолонкиПоказания, ИмяРеквизита);
	ДобавитьКолонку("ПоказанияПриход", Индекс, "Расход", спКолонкиПоказания, ИмяРеквизита);
	ДобавитьКолонку("ПоказанияКонечныйОстаток", Индекс, "На конец", спКолонкиПоказания, ИмяРеквизита);
	//группа колонок Баланс
	спПраваяГруппаКолонок = Элементы.Добавить("спПраваяГруппаКолонок" + Индекс, Тип("ГруппаФормы"),
		спОсновнаяГруппаКолонок);
	спПраваяГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	спПраваяГруппаКолонок.Заголовок = "Баланс:";
	спПраваяГруппаКолонок.ШрифтЗаголовка = ШрифтыСтиля["ВыделениеТекста"];
	спПраваяГруппаКолонок.ОтображатьВШапке = Истина;
	ДобавитьКолонку("БалансНачальныйОстаток", Индекс, "Начальный", спПраваяГруппаКолонок, ИмяРеквизита);
	ДобавитьКолонку("БалансПриход", Индекс, "Стоимость", спПраваяГруппаКолонок, ИмяРеквизита);
	ДобавитьКолонку("БалансРасход", Индекс, "Оплачено", спПраваяГруппаКолонок, ИмяРеквизита);
	ДобавитьКолонку("БалансКонечныйОстаток", Индекс, "Итоговый", спПраваяГруппаКолонок, ИмяРеквизита);
	Возврат реквСписок;
КонецФункции

&НаСервере
Процедура ДобавитьКолонку(ИмяПоказателя, Индекс, Заголовок, ГруппаКолонок, ИмяТаблицы)
	спКолонка = Элементы.Добавить("спКолонка" + ИмяПоказателя + Индекс, Тип("ПолеФормы"), ГруппаКолонок);
	спКолонка.ПутьКДанным = ИмяТаблицы + "." + ИмяПоказателя;
	спКолонка.Заголовок = Заголовок;
	спКолонка.Формат = "ЧН=0,00";
КонецПроцедуры
#КонецОбласти