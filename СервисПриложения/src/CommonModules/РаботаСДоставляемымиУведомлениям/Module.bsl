#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

Процедура ОтправитьУведомление(Уведомление, Пользователь) Экспорт
	
	Выборка = ПланыОбмена.Мобильные.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ИдентификаторПодписчикаДоставляемыхУведомлений <> Неопределено Тогда
			Если Пользователь = Неопределено ИЛИ Пользователь = Выборка.Владелец Тогда
				Идентификатор = Выборка.ИдентификаторПодписчикаДоставляемыхУведомлений.Получить();
				Если Идентификатор <> Неопределено Тогда
					Уведомление.Получатели.Добавить(Идентификатор);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Уведомление.Получатели.Количество() > 0 Тогда
		ДанныеАутентификации = "";
		ДанныеАутентификации = СокрЛП(Константы.КлючДоступаОтправителя.Получить());
			
		УдаленныеТокены = Новый Массив;
		ОтправкаДоставляемыхУведомлений.Отправить(Уведомление, ДанныеАутентификации, УдаленныеТокены, Истина);
		НеИспользоватьИдентификаторы(УдаленныеТокены);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Код процедур и функций
Процедура НеИспользоватьИдентификаторы(Токены)
	
	Если Токены.Количество() > 0 Тогда
		Выборка = ПланыОбмена.Мобильные.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ИдентификаторПодписчикаДоставляемыхУведомлений <> Неопределено Тогда
				Идентификатор = Выборка.ИдентификаторПодписчикаДоставляемыхУведомлений.Получить();
				Если Идентификатор <> Неопределено И Токены.Найти(Идентификатор.ИдентификаторУстройства) Тогда
		            Узел = Выборка.ПолучитьОбъект();
					Узел.ИдентификаторПодписчикаДоставляемыхУведомлений = Неопределено;
					Узел.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

