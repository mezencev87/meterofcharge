#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Адрес = Справочники.Адреса.ПустаяСсылка();
	Если Параметры.Свойство("Адрес", Адрес) Тогда
		Объект.Адрес = Адрес;
		ВыборкаУслуг = Справочники.НаборыУслуг.Выбрать(, Адрес, , );
		Пока ВыборкаУслуг.Следующий() Цикл
			Услуга = ВыборкаУслуг.Ссылка.ПолучитьОбъект();
			НоваяСтрока = Объект.Расчеты.Добавить();
			//@skip-check query-in-loop
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаполнитьНовуюСтроку(Услуга.Ссылка, Услуга.ВидРасчета),, "НомерСтроки");
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновлениеДанных");
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СтрокаТЧ = Объект.Расчеты[ИсточникВыбора.НомерСтроки - 1];
	ЗаполнитьЗначенияСвойств(СтрокаТЧ, ИсточникВыбора);
	Элементы.Расчеты.ТекущаяСтрока = СтрокаТЧ.ПолучитьИдентификатор();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Асинх Процедура НоваяЗапись(Команда)
	МассивУслуг = СписокНеуказанныхУслуг();
	Если МассивУслуг.Количество() = 0 Тогда
		Ожидание = ВопросАсинх("Все указанные в вашем профиле услуги уже занесены в расчет. Все равно хотите продолжить?", РежимДиалогаВопрос.ДаНет);
		Результат = Ждать Ожидание;
		Если Результат = КодВозвратаДиалога.Да Тогда
			СписокУслуг = Новый СписокЗначений;
			СписокУслуг.ЗагрузитьЗначения(Объект.Расчеты.Выгрузить().ВыгрузитьКолонку("НаборУслуг"));
			Ожидание = ВыбратьИзСпискаАсинх(СписокУслуг, Элементы.Расчеты);
			Результат = Ждать Ожидание;
			Если Результат = Неопределено Тогда
				Возврат;
			Иначе
				НаборУслуг = Результат.Значение;
				СтрокаРасчета = Объект.Расчеты.НайтиСтроки(Новый Структура("НаборУслуг", НаборУслуг))[0];
				Если СтрокаРасчета.ВидРасчета = ПредопределенноеЗначение("Перечисление.ВидыЦены.Фактическая") Тогда
					ВидРасчета = ПредопределенноеЗначение("Перечисление.ВидыЦены.Нормативная");
				Иначе
					ВидРасчета = ПредопределенноеЗначение("Перечисление.ВидыЦены.Корректировка");
				КонецЕсли;
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		СписокУслуг = Новый СписокЗначений;
		СписокУслуг.ЗагрузитьЗначения(МассивУслуг);
		Ожидание = ВыбратьИзСпискаАсинх(СписокУслуг, Элементы.Расчеты);
		Результат = Ждать Ожидание;
		Если Результат = Неопределено Тогда
			Возврат;
		Иначе
			НаборУслуг = Результат.Значение;
			ВидРасчета = ОсновнойВидРасчетаУслуги(НаборУслуг);
		КонецЕсли;
	КонецЕсли;
	Если Не (ЗначениеЗаполнено(НаборУслуг) Или ЗначениеЗаполнено(ВидРасчета)) Тогда
		Сообщить("Сперва укажите услугу и основной вид расчета!");
		Возврат;
	КонецЕсли;
	стПараметры = ЗаполнитьНовуюСтроку(НаборУслуг, ВидРасчета);
	НоваяСтрока = Объект.Расчеты.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, стПараметры, , "НомерСтроки");
	стПараметры.НомерСтроки = НоваяСтрока.НомерСтроки;
	стПараметры.ТекущийБаланс = НоваяСтрока.Баланс;
	ОткрытьФорму("Документ.Расчет.Форма.ФормаСтроки", стПараметры, ЭтотОбъект, , , , ,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура Изменить(Команда)
	стПараметры = Новый Структура("ОкончаниеПериода,КоличествоЧеловек,ТекущиеПоказания,Тариф,Оплата,Баланс,
	|	ТекущийБаланс,ПредыдущиеПоказания,ВидРасчета,НомерСтроки");
	ЗаполнитьЗначенияСвойств(стПараметры, Элементы.Расчеты.ТекущиеДанные);
	стПараметры.ТекущийБаланс = ТекущийБаланс(Элементы.Расчеты.ТекущиеДанные.НаборУслуг, Объект.Дата);
	ОткрытьФорму("Документ.Расчет.Форма.ФормаСтроки", стПараметры, ЭтотОбъект, , , , ,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций
&НаСервере
Функция СписокНеуказанныхУслуг()
	СписокУслуг = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборыУслуг.Ссылка КАК НаборУслуг
	|ИЗ
	|	Справочник.НаборыУслуг КАК НаборыУслуг
	|ГДЕ
	|	НаборыУслуг.Используется = ИСТИНА
	|	И НаборыУслуг.НачалоЭксплуатации <= &ДатаАктуальности
	|	И НЕ НаборыУслуг.Ссылка В (&СписокРесурсов)
	|	И НаборыУслуг.Владелец = &Адрес";
	Запрос.УстановитьПараметр("Адрес", Объект.Адрес);
	Запрос.УстановитьПараметр("ДатаАктуальности", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("СписокРесурсов", Объект.Расчеты.Выгрузить().ВыгрузитьКолонку("НаборУслуг"));

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();

	Пока ВыборкаЗапроса.Следующий() Цикл
		СписокУслуг.Добавить(ВыборкаЗапроса.НаборУслуг);
	КонецЦикла;
	Возврат СписокУслуг;
КонецФункции

&НаСервере
Функция ОсновнойВидРасчетаУслуги(НаборУслуг)
	Возврат НаборУслуг.ВидРасчета;
КонецФункции

&НаСервере
Функция ТекущийБаланс(НаборУслуг, ДатаАктуальности)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РасчетыЗаУслугиОстаткиИОбороты.БалансКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.РасчетыЗаУслуги.ОстаткиИОбороты(, &ДатаАктуальности, Регистратор,, НаборУслуг = &НаборУслуг) КАК
		|		РасчетыЗаУслугиОстаткиИОбороты
		|ГДЕ
		|	РасчетыЗаУслугиОстаткиИОбороты.Регистратор <> &Ссылка
		//|	И Не РасчетыЗаУслугиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтметкиСчетчика
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетыЗаУслугиОстаткиИОбороты.Период УБЫВ";
	
	Запрос.УстановитьПараметр("НаборУслуг", НаборУслуг);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.БалансКонечныйОстаток;
	КонецЕсли;
	Возврат 0;
КонецФункции

&НаСервере
Функция ЗаполнитьНовуюСтроку(НаборУслуг, ВидРасчета)
	Перем ДатаАктуальности;
	Перем РезультатЗапроса;
	Перем ВыборкаЗапроса;
	Перем Запрос;
	стАтрибуты = Новый Структура("НаборУслуг,ОкончаниеПериода,КоличествоЧеловек,ТекущиеПоказания,Тариф,Оплата,Баланс,
								  |	ТекущийБаланс,ПредыдущиеПоказания,ВидРасчета,НомерСтроки,НачалоПериода");
	ДатаАктуальности = ТекущаяДатаСеанса();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетыЗаУслугиОстаткиИОбороты.ПоказанияКонечныйОстаток КАК ПоказанияКонечныйОстаток,
	|	РасчетыЗаУслугиОстаткиИОбороты.БалансКонечныйОстаток КАК БалансКонечныйОстаток,
	|	РасчетыЗаУслугиОстаткиИОбороты.Период КАК ДатаДвижения,
	|	РасчетыЗаУслугиОстаткиИОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыЗаУслуги.ОстаткиИОбороты(, &ДатаАктуальности, Регистратор,, НаборУслуг = &НаборУслуг) КАК
	|		РасчетыЗаУслугиОстаткиИОбороты
	|ГДЕ
	|	РасчетыЗаУслугиОстаткиИОбороты.Регистратор <> Неопределено
	//|	И Не РасчетыЗаУслугиОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтметкиСчетчика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДвижения УБЫВ";
	Запрос.УстановитьПараметр("НаборУслуг", НаборУслуг);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	стАтрибуты.НаборУслуг = НаборУслуг;
	стАтрибуты.ВидРасчета = ВидРасчета;
	стАтрибуты.КоличествоЧеловек = НаборУслуг.Владелец.КоличествоЧеловек;
	Если ВыборкаЗапроса.Следующий() Тогда
		стАтрибуты.ПредыдущиеПоказания = ВыборкаЗапроса.ПоказанияКонечныйОстаток;
		стАтрибуты.Баланс = ВыборкаЗапроса.БалансКонечныйОстаток;
		стАтрибуты.НачалоПериода = ВыборкаЗапроса.ДатаДвижения;
	КонецЕсли;
	стАтрибуты.ОкончаниеПериода = ДатаАктуальности;
	стАтрибуты.Тариф = РасчетыВызовСервера.ТарифДляНабораУслуг(НаборУслуг, ВидРасчета, ДатаАктуальности);
	Возврат стАтрибуты;
КонецФункции
#КонецОбласти